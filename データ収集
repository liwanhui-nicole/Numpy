初始值不同的情况下，收集到的数据集
*******************************************
#初始值(3., 12.)，高斯噪声（0., 0.1）

import numpy as np

data = []                                  #保存样本集的列表
for i in range(100):                       #循环采样100个点
    x = np.random.uniform(3., 12.)         #随机采样输入x，定义两个Float型初始值
    # mean=0, std=0.1
    eps = np.random.normal(0., 0.1)        #采样高斯噪声
    y = 1.477 * x + 0.089 + eps            #模型输出
    data.append([x, y])                    #保存样本点
data = np.array(data)                      #转换为2D Numpy数组
print(data.shape, data)                    


====================== RESTART: /Users/nicole/Documents/python1.py =====================
(100, 2) [[ 5.43657426  8.14587564]
 [ 5.37814448  8.0525745 ]
 [10.51770116 15.62223061]
 [10.82424655 16.16882907]
 [ 7.72792014 11.34473762]
 [ 7.38836879 10.90209567]
 [11.47222104 17.02880556]
 [ 6.0669729   9.07125976]
 [ 6.38209925  9.33378391]
 [ 5.3764362   7.92774527]
 [ 4.51283975  6.7364882 ]
 [ 5.60728644  8.29376264]
 [11.6303098  17.39467408]
 [11.17184496 16.5164355 ]
 [ 3.09945482  4.61737753]
 [ 8.65318728 12.86126344]
 [ 7.8656014  11.59667546]
 [ 3.12530697  4.75253591]
 [ 7.04267508 10.46252257]
 [ 4.15875069  6.15375234]
 [11.53458757 17.10467474]
 [ 7.38329314 11.0208562 ]
 [ 5.61756926  8.36617594]
 [10.72872801 15.94568195]
 [11.87970966 17.81844932]
 [ 6.47540421  9.53206808]
 [11.24082531 16.66726668]
 [10.3097763  15.28851899]
 [ 7.8523232  11.67770397]
 [ 8.79197523 13.01626599]
 [10.23459764 15.18427028]
 [ 6.48365738  9.63179538]
 [ 5.03269085  7.53805575]
 [ 7.74352015 11.57038272]
 [ 5.06381923  7.53150176]
 [ 9.45998969 14.1263132 ]
 [ 4.88395293  7.14140812]
 [ 7.31283738 11.00051157]
 [ 4.79020246  7.14345707]
 [ 3.02468313  4.51337901]
 [ 4.30595349  6.42195274]
 [ 4.29973913  6.34197472]
 [10.68318487 15.98026802]
 [ 9.47567921 14.07517021]
 [11.51832063 17.05636732]
 [10.01005223 14.593047  ]
 [ 3.39356923  5.01731782]
 [ 6.60933398  9.7450833 ]
 [ 3.56847585  5.35292352]
 [ 4.26785589  6.41773996]
 [11.61433172 17.30925004]
 [ 9.85942597 14.72401018]
 [ 9.01488131 13.67486504]
 [ 5.7540702   8.6490515 ]
 [ 3.83839524  5.65156419]
 [ 5.11830503  7.67861686]
 [ 9.09659665 13.66623362]
 [ 8.10930776 11.911327  ]
 [ 3.08050229  4.46782671]
 [10.72164496 15.89711332]
 [ 4.76067586  7.07893345]
 [10.86021985 16.16626719]
 [ 6.78700191 10.18084217]
 [ 7.8290458  11.57428125]
 [ 7.19868106 10.7515092 ]
 [11.02122109 16.54731037]
 [ 3.59844363  5.42386496]
 [ 5.8435176   8.57251782]
 [ 5.32609469  8.07933326]
 [11.05447857 16.31893171]
 [ 8.2141174  12.15366799]
 [11.48000122 16.92295411]
 [ 4.58226927  6.82875901]
 [ 4.11622337  6.21204812]
 [ 4.81724835  7.11401328]
 [ 6.08384405  9.09983613]
 [11.13293503 16.68634565]
 [ 5.39028797  8.07390053]
 [11.44670411 16.87294196]
 [ 6.44297158  9.71711629]
 [ 3.22305323  4.55564421]
 [ 3.34975055  4.97877243]
 [ 5.86941382  8.72059315]
 [ 6.81393058 10.05627562]
 [ 5.44890615  8.33866153]
 [11.03881862 16.44555795]
 [ 5.24571097  7.9508981 ]
 [ 7.47894655 11.20163719]
 [ 7.88937272 11.67491452]
 [11.07474983 16.44562582]
 [10.99250947 16.18579751]
 [ 6.67596809  9.95854703]
 [ 6.13974667  9.14771845]
 [ 4.48183138  6.72110959]
 [11.82361626 17.62658498]
 [11.76409765 17.32374121]
 [ 3.11327172  4.71091904]
 [ 8.52238088 12.66353761]
 [ 9.25516416 13.88010695]
 [ 9.9885054  14.79103205]]
>>> 



*******************************************
#初始值(-10., 10.)，高斯噪声（0., 0.01）

import numpy as np

data = []                                  #保存样本集的列表
for i in range(100):                       #循环采样100个点
    x = np.random.uniform(-10., 10.)       #随机采样输入x，定义两个Float型初始值
    # mean=0, std=0.1
    eps = np.random.normal(0., 0.01)       #采样高斯噪声
    y = 1.477 * x + 0.089 + eps            #模型输出
    data.append([x, y])                    #保存样本点
data = np.array(data)                      #转换为2D Numpy数组
print(data.shape, data)                    


====================== RESTART: /Users/nicole/Documents/python1.py =====================
(100, 2) [[  4.60309365   6.89642191]
 [  7.18716983  10.70132673]
 [ -7.08865183 -10.3800215 ]
 [ -5.21245718  -7.59437262]
 [  5.73162238   8.55930698]
 [  8.81670194  13.11390712]
 [ -7.29366895 -10.70417198]
 [ -8.96774722 -13.16116701]
 [ -6.36135162  -9.30256531]
 [ -1.47714907  -2.08518997]
 [  8.04468879  11.98842839]
 [ -4.2117134   -6.13637965]
 [ -5.86921424  -8.57961923]
 [  8.36373116  12.4381054 ]
 [  8.48750379  12.63270162]
 [ -9.17611151 -13.46103474]
 [ -5.14127199  -7.5049914 ]
 [ -4.16379053  -6.0522385 ]
 [ -2.76034439  -3.98690204]
 [ -8.05286998 -11.80597324]
 [ -0.61719639  -0.81343669]
 [  2.91138856   4.41161031]
 [ -4.56676617  -6.65450506]
 [ -9.51452752 -13.9501425 ]
 [  1.44156676   2.2217609 ]
 [ -1.94618482  -2.78094528]
 [  8.18107566  12.17823516]
 [  9.02012145  13.42808395]
 [  5.37665872   8.01639954]
 [ -1.66116022  -2.3593195 ]
 [ -9.32041897 -13.69825044]
 [  7.30627813  10.86898096]
 [  9.52814147  14.16116426]
 [  2.85943727   4.32902528]
 [ -4.03678782  -5.86391311]
 [ -0.59846521  -0.79132391]
 [ -0.78985703  -1.0825516 ]
 [ -2.57314958  -3.70626859]
 [  5.39522646   8.04340845]
 [  0.59425302   0.96879672]
 [ -4.41536626  -6.4354475 ]
 [  1.83303625   2.79950863]
 [ -0.98469282  -1.36929962]
 [  3.39249856   5.11715441]
 [  1.70631967   2.63246257]
 [  0.72625595   1.16528333]
 [ -4.8330922   -7.04815408]
 [  1.04744619   1.64056619]
 [ -1.09710977  -1.51883674]
 [  1.25475342   1.93693836]
 [  5.02394626   7.5172382 ]
 [  9.17755276  13.65599399]
 [  6.69832791   9.97149268]
 [ -4.31295468  -6.27337299]
 [  8.8557664   13.15443864]
 [  3.44825045   5.16526982]
 [  1.94662554   2.96051159]
 [  7.3455044   10.92603351]
 [ -8.78520803 -12.89107963]
 [ -8.79440766 -12.89890329]
 [  2.50443736   3.79783717]
 [ -0.61768988  -0.81739483]
 [ -1.9544141   -2.78207097]
 [ -4.10454757  -5.97443223]
 [  9.22375892  13.69782391]
 [  0.49294446   0.82897137]
 [ -7.72828623 -11.32344269]
 [ -3.28838977  -4.76411026]
 [ -4.69151658  -6.8259643 ]
 [  7.21375123  10.75010651]
 [ -9.10096552 -13.33913932]
 [  0.7171961    1.14497212]
 [  6.73873077  10.03276362]
 [  5.73271602   8.56082026]
 [  7.58188252  11.28678621]
 [  3.29316805   4.96602806]
 [ -1.68457568  -2.39312788]
 [ -8.3197673  -12.19597431]
 [ -2.26095396  -3.24143298]
 [  2.13651285   3.23828324]
 [ -6.37356315  -9.31795716]
 [  4.3568868    6.52321774]
 [  0.30830555   0.53870235]
 [  9.00417365  13.38418208]
 [  2.75890116   4.14827957]
 [ -7.14055879 -10.43806793]
 [  5.46549895   8.14566251]
 [ -8.20426071 -12.01246141]
 [ -4.00361323  -5.817484  ]
 [ -8.13747832 -11.93000766]
 [ -8.66800151 -12.712853  ]
 [ -7.25327232 -10.6192345 ]
 [  5.9831234    8.9162209 ]
 [  5.47440764   8.16375251]
 [ -7.14769901 -10.46468253]
 [  1.80175776   2.74033228]
 [  3.91025717   5.87849235]
 [ -2.04708019  -2.93576821]
 [ -4.58209811  -6.67995317]
 [  9.883302    14.69657289]]
>>> 

